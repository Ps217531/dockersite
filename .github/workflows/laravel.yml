
name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
      
      - name: Set up PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.1'
      
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
      - name: Update Composer Dependencies
        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
      - name: Generate Key
        run: php artisan key:generate
      
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      
      - name: Run Database Migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --env=testing --no-interaction
      
      - name: Execute Tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
      
      # Voeg hieronder de stappen toe om een Docker-image te bouwen en te pushen
      
      - name: Build Docker Image
        run: docker build -t my-laravel-app .
      
      - name: Log into Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker Image
        run: docker push my-laravel-app


